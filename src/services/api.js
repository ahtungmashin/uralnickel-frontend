import axios from 'axios';
import router from '@/router';
import { useToast } from 'vue-toastification';

const toast = useToast();

const api = axios.create({
  baseURL: 'http://localhost:5000/api',
  timeout: 10000
});

// üìå –í—Å—Ç–∞–≤–∫–∞ —Ç–æ–∫–µ–Ω–∞ –≤ –∫–∞–∂–¥—ã–π –∑–∞–ø—Ä–æ—Å
api.interceptors.request.use((config) => {
  const token = localStorage.getItem('authToken');
  if (token && config.baseURL?.includes('localhost')) {
    config.headers.Authorization = `Bearer ${token}`;
  }
  return config;
});

// ‚ö†Ô∏è –ì–ª–æ–±–∞–ª—å–Ω—ã–π –ø–µ—Ä–µ—Ö–≤–∞—Ç –æ—à–∏–±–æ–∫
api.interceptors.response.use(
  response => response,
  error => {
    const status = error.response?.status;
    const message = error.response?.data?.message;
    const config = error.config || {};

    if (!error.response) {
      toast.error('–°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É.');
    } else if ((status === 401 || status === 403) && !config.__skipGlobalToast) {
      toast.error('–°–µ—Å—Å–∏—è –∏—Å—Ç–µ–∫–ª–∞. –í–æ–π–¥–∏—Ç–µ —Å–Ω–æ–≤–∞.');
      localStorage.removeItem('authToken');
      localStorage.removeItem('user');
      router.push('/login');
    } else if (status >= 500 && !config.__skipGlobalToast) {
      toast.error('–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ.');
    } else if (message && !config.__skipGlobalToast) {
      toast.error(message);
    } else if (!config.__skipGlobalToast) {
      toast.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.');
    }

    return Promise.reject(error);
  }
);

export default api;
